// Food containers
@PART[TacFoodContainer,TacFoodContainerSmall,TacFoodContainerLarge,TacFoodContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_FoodContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_FoodContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportContainers/FoodTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// Life support containers
@PART[TacLifeSupportContainer,TacLifeSupportContainerSmall,TacLifeSupportContainerLarge,TacLifeSupportContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_LifeSupportContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_LifeSupportContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportContainers/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// Oxygen containers
@PART[TacOxygenContainer,TacOxygenContainerSmall,TacOxygenContainerLarge,TacOxygenContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_OxygenContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_OxygenContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportContainers/OxygenTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// Waste containers
@PART[TacWasteContainer,TacWasteContainerSmall,TacWasteContainerLarge,TacWasteContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_WasteContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_WasteContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportContainers/WasteTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// Water containers
@PART[TacWaterContainer,TacWaterContainerSmall,TacWaterContainerLarge,TacWaterContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_WaterContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_WaterContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportContainers/WaterTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// Airfilter recycler
@PART[TacAirFilter]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_AirfilterRecycler
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_AirfilterRecycler
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportRecyclers/AirFilterTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/recycler_paint
	}
}

// Carbon extractor recyclers
@PART[TacCarbonExtractor,TacCarbonExtractorLarge,TacCarbonExtractorLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_CarbonExtractorRecycler
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_CarbonExtractorRecycler
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportRecyclers/CarbonExtractorTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/recycler_paint
	}
}

// Sabatier recyclers
@PART[TacSabatierRecycler,TacSabatierRecyclerLarge,TacSabatierRecyclerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_SabatierExtractorRecycler
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_SabatierExtractorRecycler
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportRecyclers/SabatierTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/recycler_paint
	}
}

// Water purifier recyclers
@PART[TacWaterPurifier,TacWaterPurifierLarge,TacWaterPurifierLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_WaterPurifierRecycler
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_WaterPurifierRecycler
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportRecyclers/WaterPurifierTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/recycler_paint
	}
}

// Water splitter recycler
@PART[TacWaterSplitter]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_WaterSplitterRecycler
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_WaterSplitterRecycler
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportRecyclers/WaterSplitterTexture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/recycler_paint
	}
}

// HexCanBreathingOxygen
@PART[HexCanOxygen,HexCanOxygenSmall,HexCanOxygenLarge]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_HexCanBreathingOxygen
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_HexCanBreathingOxygen
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportHexCans/HexCanBreathingOxygen/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/hexcan_paint
	}
}

// HexCanDrinkingWater
@PART[HexCanDrinkingWater,HexCanDrinkingWaterSmall,HexCanDrinkingWaterLarge]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_HexCanDrinkingWater
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_HexCanDrinkingWater
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportHexCans/HexCanDrinkingWater/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/hexcan_paint
	}
}

// HexCanFood
@PART[HexCanFood,HexCanFoodSmall,HexCanFoodLarge]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_HexCanFood
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_HexCanFood
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportHexCans/HexCanFood/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/hexcan_paint
	}
}

// HexCanLifeSupport
@PART[HexCanLifeSupport,HexCanLifeSupportSmall,HexCanLifeSupportLarge]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_HexCanLifeSupport
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_HexCanLifeSupport
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportHexCans/HexCanLifeSupport/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/hexcan_paint
	}
}

// TacLifeSupportMFTContainer
@PART[TacLifeSupportMFTContainer,TacLifeSupportMFTContainerSmall,TacLifeSupportMFTContainerLarge,TacLifeSupportMFTContainerLarge375]:FOR[zzzz_Something_after_P_because_]:NEEDS[modularFuelTanks|RealFuels&TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_TacLifeSupportMFTContainer
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_TacLifeSupportMFTContainer
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportMFT/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/container_paint
	}
}

// HexCanMFTLifeSupport
@PART[HexCanMFTLifeSupport,HexCanMFTLifeSupportSmall,HexCanMFTLifeSupportLarge]:FOR[zzzz_Something_after_P_because_]:NEEDS[modularFuelTanks|RealFuels&TexturesUnlimited&ThunderAerospace]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = TACLS_Paint_HexCanMFTLifeSupport
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]
{
	@name = TACLS_Paint_HexCanMFTLifeSupport
	@title = Recolour
	@MATERIAL
	{
		
		vector = _DiffuseNorm,1,1,1
		vector = _MetalNorm,1,1,1
		vector = _SmoothnessNorm,1,1,1
		
		texture = _MainTex,ThunderAerospace/TacLifeSupportMFT/HexCans/Texture
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MaskTex,TURD/TU_TACLS_Recolour/hexcan_paint
	}
}